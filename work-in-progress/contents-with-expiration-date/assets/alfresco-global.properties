
###############################
## Common Alfresco Properties #
## Enterprise overlay         #
###############################

dynamic.host=ec2-3-95-186-220.compute-1.amazonaws.com

dir.root=/usr/local/tomcat/alf_data

alfresco.context=alfresco
alfresco.host=${dynamic.host}
alfresco.port=80
alfresco.protocol=http

share.context=share
share.host=${dynamic.host}
share.port=80
share.protocol=http

# Change this to your server IP, make sure it is HTTP
aos.baseUrlOverwrite=http://${dynamic.host}/alfresco/aos

### database connection properties ###
db.driver=org.postgresql.Driver
db.username=alfresco
db.password=alfresco
#To use encrypted properties for the database uncomment the following line
# the encrypted value is added into alfresco-encrypted.properties
#db.password=${db.password.enc}
#db.username=${db.username.enc}
db.name=alfresco
db.url=jdbc:postgresql://db:5432/alfresco
# Note: your database must also be able to accept at least this many connections.  Please see your database documentation for instructions on how to configure this.
db.pool.max=275
db.pool.validate.query=SELECT 1

# The server mode. Set value here
# UNKNOWN | TEST | BACKUP | PRODUCTION
system.serverMode=PRODUCTION

### FTP Server Configuration ###
ftp.port=21

### RMI registry port for JMX ###
alfresco.rmi.services.port=50500
monitor.rmi.service.port=0

### External executable locations ###
transform.service.enabled=true
# ooo.exe=/usr/local/tomcat/libreoffice/program/soffice.bin
# ooo.enabled=false
# ooo.port=8100
# img.root=/usr/local/tomcat/common
# img.dyn=${img.root}/lib
# img.exe=${img.root}/bin/convert
# alfresco-pdf-renderer.root=/usr/local/tomcat/common/alfresco-pdf-renderer
# alfresco-pdf-renderer.exe=${alfresco-pdf-renderer.root}/alfresco-pdf-renderer

# jodconverter.enabled=true
# jodconverter.officeHome=/usr/local/tomcat/libreoffice
# jodconverter.portNumbers=8100
# jodconverter.officeHome=http://libreoffice:8090
# jodconverter.portNumbers=8090

### Initial admin password ###
alfresco_user_store.adminpassword=cf186d0963d25be07f01a6a824905483

### E-mail site invitation setting ###
notification.email.siteinvite=false

### License location ###
dir.license.external=/usr/local/tomcat/licenses/

### Smart Folders Config Properties ###
smart.folders.enabled=true

### Remote JMX (Default: disabled) ###
alfresco.jmx.connector.enabled=false

# Swap these 2 auth chains for Identity Service
authentication.chain=alfrescoNtlm1:alfrescoNtlm,ldap1:ldap
# authentication.chain=identity-service1:identity-service,alfrescoNtlm1:alfrescoNtlm,ldap1:ldap
ntlm.authentication.sso.enabled=false

ldap.authentication.active=true
ldap.authentication.allowGuestLogin=false
ldap.authentication.userNameFormat=uid=%s,ou=users,dc=example,dc=com
ldap.authentication.java.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory
ldap.authentication.java.naming.provider.url=ldap://ldap:389
ldap.authentication.java.naming.security.authentication=simple
ldap.authentication.escapeCommasInBind=false
ldap.authentication.escapeCommasInUid=false
ldap.authentication.defaultAdministratorUserNames=demo
ldap.synchronization.active=true
ldap.synchronization.java.naming.security.authentication=simple
ldap.synchronization.java.naming.security.principal=cn=admin,dc=example,dc=com
ldap.synchronization.java.naming.security.credentials=Alfresco01
ldap.synchronization.queryBatchSize=0
ldap.synchronization.attributeBatchSize=0
ldap.synchronization.groupQuery=(objectclass\=groupOfNames)
ldap.synchronization.groupDifferentialQuery=(&(objectclass\=groupOfNames)(!(modifyTimestamp<\={0})))
ldap.synchronization.personQuery=(objectclass\=inetOrgPerson)
ldap.synchronization.personDifferentialQuery=(&(objectclass\=inetOrgPerson)(!(modifyTimestamp<\={0})))
ldap.synchronization.groupSearchBase=ou\=groups,dc\=example,dc\=com
ldap.synchronization.userSearchBase=ou\=users,dc\=example,dc\=com
ldap.synchronization.modifyTimestampAttributeName=modifyTimestamp
ldap.synchronization.timestampFormat=yyyyMMddHHmmss
ldap.synchronization.userIdAttributeName=uid
ldap.synchronization.userFirstNameAttributeName=givenName
ldap.synchronization.userLastNameAttributeName=sn
ldap.synchronization.userEmailAttributeName=mail
ldap.synchronization.userOrganizationalIdAttributeName=o
ldap.synchronization.defaultHomeFolderProvider=largeHomeFolderProvider
ldap.synchronization.groupIdAttributeName=cn
ldap.synchronization.groupDisplayNameAttributeName=description
ldap.synchronization.groupType=groupOfNames
ldap.synchronization.personType=inetOrgPerson
ldap.synchronization.groupMemberAttributeName=member
ldap.synchronization.enableProgressEstimation=true
synchronization.syncOnStartup=true
synchronization.synchronizeChangesOnly=false
#synchronization.import.cron=0 0/10 * 1/1 * ?
synchronization.import.cron=0 * * ? * *

# Alfresco Identity Service configuration properties

# identity-service.authentication.enabled=true
# identity-service.enable-basic-auth=true
# identity-service.authentication.defaultAdministratorUserNames=admin
# identity-service.authentication.validation.failure.silent=false
# # This property should be your laptop's hostname, or the public EC2 hostname
# identity-service.auth-server-url=http://dockerhost/auth
# identity-service.realm=alfresco
# identity-service.resource=alfresco
# identity-service.public-client=true
# identity-service.ssl-required=none

# Solr6 Config
index.subsystem.name=solr6
solr.secureComms=none
solr.port=8983
solr.host=search
solr.base.url=/solr

# Inbound Email
email.inbound.unknownUser=admin
email.inbound.enabled=true
email.server.enabled=true
email.server.port=25
email.server.domain=${dynamic.host}
email.server.allowed.senders=.*
email.server.blocked.senders=
email.server.connections.max=3
email.server.auth.enabled=false
email.server.requireTLS=false

# Outbound Email
mail.host=email
mail.port=25
mail.username=demo
mail.password=demo
mail.from.default=demo@example.com
mail.protocol=smtp

# Optional properties that can be defined in alfresco-global.properties

# FFmpeg executable path, default is ffmpeg
ffmpeg.exe=/usr/local/tomcat/common/ffmpeg-2.8.6-64bit-static/ffmpeg
# ffmpeg path for OAV
FFMPEG.path=/usr/local/tomcat/common/ffmpeg-2.8.6-64bit-static/
# ExifTool executable path, default is exiftool
exiftool.exe=/usr/local/tomcat/common/Image-ExifTool-9.97/exiftool

# # Messaging broker, default is localhost
# messaging.broker.url=failover:(tcp://activemq:61616)

# Shared content workspace for source, type can be 'file' (likely a path to a mounted network volume), 'webdav', or 's3'
# The remote node's config.yml should have similar entries that allow it to access the same files
#content.remote.default.contentRefHandler.source.type=file
#content.remote.default.contentRefHandler.source.file.dir=
#content.remote.default.contentRefHandler.source.webdav.url=
#content.remote.default.contentRefHandler.source.webdav.username=
#content.remote.default.contentRefHandler.source.webdav.password=
#content.remote.default.contentRefHandler.source.s3.bucketName=
#content.remote.default.contentRefHandler.source.s3.bucketRegion=
#content.remote.default.contentRefHandler.source.s3.accessKey=
#content.remote.default.contentRefHandler.source.s3.secretKey=

# Shared content workspace for target, type can be 'file' (likely a path to a mounted network volume), 'webdav', or 's3'
# The remote node's config.yml should have similar entries that allow it to access the same files
#content.remote.default.contentRefHandler.target.type=file
#content.remote.default.contentRefHandler.target.file.dir=
#content.remote.default.contentRefHandler.target.webdav.url=
#content.remote.default.contentRefHandler.target.webdav.username=
#content.remote.default.contentRefHandler.target.webdav.password=
#content.remote.default.contentRefHandler.target.s3.bucketName=
#content.remote.default.contentRefHandler.target.s3.bucketRegion=
#content.remote.default.contentRefHandler.target.s3.accessKey=
#content.remote.default.contentRefHandler.target.s3.secretKey=

# Zencoder.com API credentials
#content.transformer.Zencoder.s3.accessKey=
#content.transformer.Zencoder.s3.secretKey=
#content.transformer.Zencoder.s3.bucketName=
#content.transformer.Zencoder.s3.bucketRegion=US_EAST_1
#content.transformer.Zencoder.apiKey=

# AWS Elastic Transcoder S3 bucket credentials
#content.transformer.AwsElasticTranscoder.s3.accessKey=
#content.transformer.AwsElasticTranscoder.s3.secretKey=
#content.transformer.AwsElasticTranscoder.s3.bucketName=
#content.transformer.AwsElasticTranscoder.s3.bucketRegion=US_EAST_1

# AWS Elastic Transcoder job credentials
#content.transformer.AwsElasticTranscoder.transcoder.accessKey=
#content.transformer.AwsElasticTranscoder.transcoder.secretKey=
#content.transformer.AwsElasticTranscoder.transcoder.pipelineId=
#content.transformer.AwsElasticTranscoder.transcoder.region=US_EAST_1
#content.transformer.AwsElasticTranscoder.transcoder.defaultPreset.video/mp4=1351620000001-000010

# Custom metadata extraction
#metadata.extracter.TikaExifTool.extract.namespace.prefix.custom=http://example.com/model/custom/1.0
#metadata.extracter.TikaExifTool.extract.XMP-custom\:Text=custom:text
#metadata.extracter.TikaExifTool.extract.XMP-custom\:TextML[]=custom:textMultiLine

#content.metadataExtracter.default.timeoutMs=20000

# Create thumbnails for videos
video.thumbnail.defaultOffset=00:00:00.5
video.thumbnail.storyboardIntervalSeconds=2
video.thumbnail.storyboardMaxElements=30

# We give video proxies 18 hours to finish
system.videoProxy.definition.default.timeoutMs=64800000

# Disable autostart of events subsystem
events.subsystem.autoStart=true

# Remove content transformation limits for JodConverter
content.transformer.JodConverter.extensions.doc.pdf.maxSourceSizeKBytes=-1
content.transformer.JodConverter.extensions.docx.pdf.maxSourceSizeKBytes=-1
content.transformer.JodConverter.extensions.ppt.pdf.maxSourceSizeKBytes=-1
content.transformer.JodConverter.extensions.pptx.pdf.maxSourceSizeKBytes=-1
content.transformer.JodConverter.extensions.xls.pdf.maxSourceSizeKBytes=-1
content.transformer.JodConverter.extensions.xlsx.pdf.maxSourceSizeKBytes=-1

### alfresco_http_activiti_client - https://github.com/rjmfernandes/alfresco_http_activiti_client
activiti.client.extension.endpoint=http://process:8080/activiti-app
activiti.client.extension.user=demo
activiti.client.extension.password=demo

# Desktop Sync
# The dsync.service.uris value must be resolvable from the Desktop Sync Client
# The easiest way to do this would be to map your host IP to "dockerdemo"
dsync.service.uris=http://${dynamic.host}:9090/alfresco
messaging.broker.url=failover:(tcp://activemq:61616)?timeout=3000

# JDBC Tools configuration
jdbctool.db.password=alfresco

# Solr6 Backup configuration
solr.backup.archive.remoteBackupLocation=/usr/local/tomcat/solr6Backup/archive
solr.backup.alfresco.remoteBackupLocation=/usr/local/tomcat/solr6Backup/alfresco


# Disable bruteforce protection
authentication.protection.enabled=false

# Properties for the S3 Connector, these examples are all from the docs. Replace with your own
# s3.bucketLocation=eu-central-1
# s3.encryption=AES256
# s3.flatRoot=true
# system.content.caching.maxUsageMB=51200
# system.content.caching.minFileAgeMillis=0
# s3.maxErrorRetries=3
# s3.useTenantDomainInPath=false
# s3.autoLowerCaseBucketName=false
# s3.accessKey=AKIAIOSFODNN7EXAMPLE
# s3.secretKey=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# s3.bucketName=myawsbucket
# # Main content store
# dir.contentstore=contentstore
# # 'Deleted' content store
# dir.contentstore.deleted=contentstore.deleted
# # Maximum disk usage for the cache in MB
# system.content.caching.maxUsageMB=51200
# # Maximum size of files which can be stored in the cache in MB (zero implies no limit)
# system.content.caching.maxFileSizeMB=0
# s3.abortIncompleteMultipartUploadDays=1

# AI service confidence levels 0.8 (80%) is the default
# ai.transformations.aiLabels.minConfidence=0.8
# ai.transformations.aiFeatures.minConfidence=0.8
# ai.transformations.aiTextract.minConfidence=0.8
ai.transformation.customAIPropertyMapping.file.location=/usr/local/tomcat/customAIPropertyMapping.json

# ONLYOFFICE CONFIG
onlyoffice.url=http://${dynamic.host}:8088

#TCS Properties
simflofy.socket.timeout=60000
simflofy.connect.timeout=10000
simflofy.evict.timeout=60000
simflofy.user=admin
simflofy.pass=YPEdU2yv7uZszcfd
simflofy.url=http://${dynamic.host}/simflofy-admin
simflofy.tcs.connectorIds=filenet
simflofy.tcs.cache=false
alfresco-bulk-import.behaviours.disableall=true

trashcan.cron=0 0 3 1/1 * ? *
trashcan.daysToKeep=5
trashcan.deleteBatchCount=1000

#Batch Import Properties
simflofy.jsonthreadcount=20
simflofy.batchthreadcount=50
simflofy.userid=admin
simflofy.licensekey=NONE

# VirtualViewer properties
snowbound.cache.servers=http://virtualviewer:8080/virtualviewer/AjaxServlet

# Set this to true to use OAT
annotation.useContentFilepathForTransformations=true
# Uncomment these to enable overlays
# enableAEVTOverlays=true
# annotation.shouldUseOverlays=true

# CORS Settings
# These default settings prevent files from being deleted in Share, use with caution
# cors.enabled=true
# cors.allowed.origins=*
# cors.allowed.methods=GET,POST,PUT
# cors.allowed.headers=Authorization,Content-Type,Cache-Control,X-Requested-With,X-CSRF-Token
# cors.exposed.headers=Access-Control-Allow-Origin,Access-Control-Allow-Credentials
# cors.support.credentials=false
# cors.preflight.maxage=10

# Scheduled - Job
custom-scheduled-script.enabled=true
# Run every minute
custom-scheduled-script.cronExpression=0 * * * * ?
custom-scheduled-script.expire.notification.days=5
